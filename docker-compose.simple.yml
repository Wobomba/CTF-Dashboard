version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:13-alpine
    container_name: cyberlab-db
    environment:
      POSTGRES_DB: cyberlab
      POSTGRES_USER: cyberlab
      POSTGRES_PASSWORD: cyberlab_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init_database.py:/docker-entrypoint-initdb.d/init_database.py
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cyberlab -d cyberlab"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: cyberlab-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Main Application (includes frontend)
  app:
    build: .
    container_name: cyberlab-app
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://cyberlab:cyberlab_password@db:5432/cyberlab
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=your-super-secret-key-change-in-production
      - JWT_SECRET_KEY=your-jwt-secret-key-change-in-production
      - FRONTEND_URL=http://localhost
      - CORS_ORIGINS=http://localhost,http://localhost:3000,http://localhost:5173
    ports:
      - "80:5000"  # Direct access to app (includes frontend)
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
